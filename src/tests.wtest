import entities.*
import scenario.*
import items.*
import preferences.*
import targets.* 
import sounds.*
import wollok.game.*

describe "Ataques y Movimientos de personaje" {
	
	const enemyFactory = new EnemyFactory(healthPoints = 150, damagePoints = 10)
	const enemy = enemyFactory.createEnemy()
	
	method attack(entity, strength) = entity.attack(strength)
	
	method initialize() {
		player.position(game.at(0,4))
		enemy.position(game.at(27,4))
		
		const playerUpperTarget = new UpperTarget(entity = player)
		const playerMiddleTarget = new MiddleTarget(entity = player)
		
		const enemyUpperTarget = new UpperTarget(entity = enemy)
		const enemyMiddleTarget = new MiddleTarget(entity = enemy)
		
		const playerTargets = #{playerUpperTarget, playerMiddleTarget}
		const enemyTargets = #{enemyUpperTarget, enemyMiddleTarget}
		
		player.upperTarget(playerUpperTarget)
		enemy.upperTarget(enemyUpperTarget)
		
		playerTargets.forEach({target =>
			game.addVisual(target)
			general.hit(target, player)
		})
		
		enemyTargets.forEach({target =>
			game.addVisual(target)
			general.hit(target, enemy)
		})
		
		soundProducer.provider(soundProviderMock)
	}
	
	test "Un enemigo recibe un mainAttack del jugador" {
		self.attack(player, 1).giveDamage(enemy)
		assert.equals(135, enemy.health())
	}

	test "El jugador recibe un mainAttack de un enemigo" {
		self.attack(enemy, 1).giveDamage(player)
		assert.equals(190, player.health())
	}

	test "Un enemigo recibe un specialAttack del jugador" {
		self.attack(player, 3).giveDamage(enemy)
		assert.equals(105, enemy.health())
	}
	
	test "El jugador recibe un specialAttack de un enemigo" {
		self.attack(enemy, 3).giveDamage(player)
		assert.equals(170, player.health())
	}
	
	test "El jugador esquiva un ataque" {
		player.crouch()
		assert.that(not game.hasVisual(player.upperTarget()))
	}

	test "Un enemigo esquiva un ataque" {
		enemy.crouch()
		assert.that(not game.hasVisual(enemy.upperTarget()))
	}

}

describe "Items " {
		
	const heart =  new Heart(healthPoints = 50 )
	const matienzo = new Matienzo (damagePoints = 50)
	
	method initialize() {
		soundProducer.provider(soundProviderMock)
	}
		
	test "El jugador da침ado recolecta un coraz칩n" {
		player.health(150)
		heart.giveEffect(player)
		assert.equals(200, player.health())
	}
	
	test "El jugador con su salud al m치ximo recolecta un coraz칩n" {
		heart.giveEffect(player)
		assert.equals(200, player.health())
	}
	
	test "El jugador recolecta un matienzo" {
		matienzo.giveEffect(player)
		assert.equals(65, player.damagePoints())
	}
	
}
